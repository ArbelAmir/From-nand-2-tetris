function Bike.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 60
pop static 0
push constant 30
pop static 1
push argument 0
pop this 0
push argument 1
pop this 1
push argument 0
push constant 16
add
pop this 2
push argument 1
push constant 16
add
pop this 3
push constant 0
pop this 6
push constant 0
pop this 5
push pointer 0
return
function Bike.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Bike.getTopLX 0
push argument 0
pop pointer 0
push this 0
return
function Bike.getTopLY 0
push argument 0
pop pointer 0
push this 1
return
function Bike.getBottRX 0
push argument 0
pop pointer 0
push this 2
return
function Bike.getBottRY 0
push argument 0
pop pointer 0
push this 3
return
function Bike.move 0
push argument 0
pop pointer 0
push this 5
push constant 0
gt
push this 5
push static 1
push constant 1
add
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bike.eraseBike 1
pop temp 0
push this 1
push constant 3
sub
pop this 1
push this 5
push constant 1
add
pop this 5
goto IF_END0
label IF_FALSE0
push this 5
push static 1
gt
push this 5
push static 0
push constant 1
add
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Bike.eraseBike 1
pop temp 0
push this 1
push constant 3
add
pop this 1
push this 5
push constant 1
add
pop this 5
label IF_FALSE1
push this 5
push static 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 5
push constant 0
pop this 6
label IF_FALSE2
label IF_END0
push pointer 0
call Bike.drawBike 1
pop temp 0
push constant 0
return
function Bike.upPressed 0
push argument 0
pop pointer 0
push this 6
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 5
push constant 0
not
pop this 6
label IF_FALSE0
push constant 0
return
function Bike.drawBike 2
push argument 0
pop pointer 0
push this 1
push constant 32
call Math.multiply 2
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push local 0
add
pop local 1
push local 1
push constant 0
add
push constant 480
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
push constant 480
call Memory.poke 2
pop temp 0
push local 1
push constant 64
add
push constant 480
call Memory.poke 2
pop temp 0
push local 1
push constant 96
add
push constant 12768
call Memory.poke 2
pop temp 0
push local 1
push constant 128
add
push constant 24768
call Memory.poke 2
pop temp 0
push local 1
push constant 160
add
push constant 4160
neg
call Memory.poke 2
pop temp 0
push local 1
push constant 192
add
push constant 17981
neg
call Memory.poke 2
pop temp 0
push local 1
push constant 224
add
push constant 7679
call Memory.poke 2
pop temp 0
push local 1
push constant 256
add
push constant 16382
call Memory.poke 2
pop temp 0
push local 1
push constant 288
add
push constant 12280
call Memory.poke 2
pop temp 0
push local 1
push constant 320
add
push constant 4088
call Memory.poke 2
pop temp 0
push local 1
push constant 352
add
push constant 1825
neg
call Memory.poke 2
pop temp 0
push local 1
push constant 384
add
push constant 1889
neg
call Memory.poke 2
pop temp 0
push local 1
push constant 416
add
push constant 9829
neg
call Memory.poke 2
pop temp 0
push local 1
push constant 448
add
push constant 1121
neg
call Memory.poke 2
pop temp 0
push local 1
push constant 480
add
push constant 2017
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Bike.eraseBike 2
push argument 0
pop pointer 0
push this 1
push constant 32
call Math.multiply 2
push this 0
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push local 0
add
pop local 1
push local 1
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 1
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
