// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int KEYBOARD_RAM_LOC;

    /** Initializes the keyboard. */
    function void init() {
        let KEYBOARD_RAM_LOC = 24576;
        return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(KEYBOARD_RAM_LOC);
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
        var int i, j;
        do Output.printChar(0);
        while ((j = 0) | (i > 0)) {
            let i = Keyboard.keyPressed();
            if (i > 0) {
                let j = i;
            }
        }
        do Output.printChar(String.backSpace());
        do Output.printChar(j);
        return j;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var boolean enterPressed;
        var char inChar, newLn, backSpace;
        var String newStr;

        let newStr = String.new(80);
        do Output.printString(message);

        let newLn = String.newLine();
        let backSpace = String.backSpace();
        
        while (~enterPressed) 
        {
            let inChar = Keyboard.readChar();
            let enterPressed = (inChar = newLn);
            if (~enterPressed) 
            {
                if (inChar = backSpace) 
                {
                    do newStr.eraseLastChar();
                }
                else 
                {
                    let newStr = newStr.appendChar(inChar);
                }
            }
        }
        return newStr;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
        var String tempStr;
        var int intString;
        let tempStr = Keyboard.readLine(message);
        let intString = tempStr.intValue();
        do tempStr.dispose();
        return intString;
    }
}

